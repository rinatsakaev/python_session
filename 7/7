Итератор - любой объект, у которого есть методы:
 __iter__
 __next__
При использовании итератора расчет выходного значения происходит в момент, когда вызывается __next__,
т.е в памяти вся коллекция не хранится
Генератор - как итератор, только функция с yield

yield from iterable- начиная с версии 3.3, эта конструкция - более короткий вариант for item
in iterable: yield item
def gen(x):
    yield from range(x)
list(gen(5)) # [0, 1, 2, 3, 4]

##################operator
можем использовать оператор вместо лямбды, если хотим передать функцию как параметр.
работает немного быстрее, и писать меньше
opertor.itemgetter(n)
operator.attrgetter("attrname")